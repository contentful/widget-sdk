#!/usr/bin/env node

// Convert Jade template into hyperscript
//
// Outputs the JavaScript source. Source must still be autofixed with
// ESlint.
//
// Usage: bin/jade-to-h path/to/file.jade

const Jade = require('jade')
const htmlToHs_ = require('html-to-hyperscript').htmlToHs
const {camelCase} = require('lodash')

if (!module.parent) {
  const src = process.argv[2]
  const html = Jade.renderFile(src)
  const hs = htmlToHs(html)
  console.log(hs)
}


exports.htmlToHs = htmlToHs
function htmlToHs (html) {
  const hs = htmlToHs_({
    syntax: 'h',
    tabsize: 2,
    attributesSelector ({name, value, prefix}) {
      return function (props) {
        if (name === 'className') {
          // We omit class attributes. They are already part of the
          // selector
          return props
        } else if (prefix) {
          props[`${prefix}:${name}`] = value
          return props
        } else {
          props[camelCase(name)] = value
          return props
        }
      }
    }
  }, html)

  // Remove quotes from object keys
  // {
  //   "key": value -> key: value
  // }
  return hs.replace(/\s*"\w+":\s/g, (match) => {
    return match.replace(/"/g, '')
  })
}
