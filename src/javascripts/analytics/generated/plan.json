{
  "create_time": "2020-03-10T16:37:32.000Z",
  "display_name": "userInterface",
  "name": "workspaces/contentful-staging/tracking-plans/rs_1YwenhuqVMybvb7zC1c0OEAP6Cj",
  "rules": {
    "events": [
      {
        "description": "ApiKey schema",
        "name": "api_key",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "type": ["string"]
                },
                "api_key_id": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string", "null"]
                },
                "space_key": {
                  "type": ["string"]
                },
                "version": {
                  "type": ["integer", "null"]
                }
              },
              "required": ["space_key", "action", "api_key_id"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Records an event in App lifecycle",
        "name": "app_lifecycle_event",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "app_event_name": {
                  "description": "Name of lifecycle event",
                  "type": "string"
                },
                "contentful_app_id": {
                  "description": "ID of Contentful App",
                  "type": "string"
                },
                "contentful_event_id": {
                  "description": "Web App generated correlation ID",
                  "type": "string"
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "description": "Refers to organization_key",
                  "type": ["string", "null"]
                },
                "space_key": {
                  "description": "Refers to space_key",
                  "type": "string"
                }
              },
              "required": [
                "space_key",
                "contentful_event_id",
                "contentful_app_id",
                "app_event_name"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Web app opened by visiting app.contentful.com",
        "name": "app_open",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "environment_key": {
                  "type": "string"
                },
                "organization_key": {
                  "type": "string"
                },
                "space_key": {
                  "type": "string"
                }
              }
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Records a reason for App uninstallation",
        "name": "app_uninstallation_reason",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "contentful_app_id": {
                  "description": "ID of Contentful App",
                  "type": "string"
                },
                "contentful_event_id": {
                  "description": "Web App generated correlation ID",
                  "type": "string"
                },
                "custom": {
                  "description": "Is reason custom or not",
                  "type": "boolean"
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "description": "Refers to organization_key",
                  "type": ["string", "null"]
                },
                "reason": {
                  "description": "Reason for uninstalling",
                  "type": "string"
                },
                "space_key": {
                  "description": "Refers to space_key",
                  "type": "string"
                }
              },
              "required": [
                "space_key",
                "contentful_event_id",
                "contentful_app_id",
                "custom",
                "reason"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "name": "apps:lifecycle_event",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "data": {
                  "properties": {
                    "app_event_name": {
                      "type": ["string"]
                    },
                    "contentful_app_id": {
                      "type": ["string"]
                    },
                    "contentful_event_id": {
                      "type": ["string"]
                    },
                    "environment_key": {
                      "type": ["string"]
                    },
                    "organization_key": {
                      "type": ["string"]
                    },
                    "space_key": {
                      "type": ["string"]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "description": "Tracks usage of boilerplate projects",
        "name": "boilerplate",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "platform": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                }
              },
              "required": ["organization_key", "space_key", "action", "platform"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Schema for any event that has to do with content preview in our webapp",
        "name": "content_preview",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "content_type_id": {
                  "type": ["string"]
                },
                "content_type_name": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "preview_id": {
                  "type": ["string"]
                },
                "preview_name": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                }
              },
              "required": ["organization_key", "space_key", "preview_name", "preview_id"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Emitted when a job is triggered",
        "name": "dialog",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "description": "action performed in relationship with the dialog. Example: (dialog) open",
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "funnel_id": {
                  "description": "unique id generated, to make funnel analytics way simpler",
                  "type": ["string", "null"]
                },
                "name": {
                  "description": "name identifying the current dialog name. Example: jobs_create",
                  "type": ["string"]
                },
                "organization_key": {
                  "description": "refers to GK organization key",
                  "type": ["string"]
                },
                "purpose": {
                  "description": "if known, identifies what the dialog is intended to fulfill. Example: Entry.publish",
                  "type": ["string", "null"]
                },
                "space_key": {
                  "description": "refers to GK space key",
                  "type": ["string"]
                }
              },
              "required": ["organization_key", "space_key", "name", "action"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "name": "editor_interface_field_updated",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "content_type_id": {
                  "description": "",
                  "type": "string"
                },
                "environment_key": {
                  "description": "",
                  "type": "string"
                },
                "field_id": {
                  "description": "",
                  "type": "string"
                },
                "field_settings": {
                  "description": "",
                  "type": "object"
                },
                "field_type": {
                  "description": "",
                  "type": "string"
                },
                "organization_key": {
                  "description": "",
                  "type": "string"
                },
                "space_key": {
                  "description": "",
                  "type": "string"
                },
                "widget_id": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "traits": {
              "type": "object"
            }
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "editor_loaded",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "description": "`init` is triggered every time a slide is loaded. `entity_loaded` is triggered when the editor's main entity is loaded. `sharejs_connected` is triggered when a connection with ShareJS has been established while in case ShareJS is not used for the editor, the more generic `doc_connected` is triggered. `links_rendered` is triggered when all the links (references, media, and rich text embeds / entry hyperlinks) in a slide have been fetched and rendered. `fully_interactive` is trigger when both the links have rendered and the entry has become editable (i.e. ShareJS has connected).",
                  "enum": [
                    "doc_connected",
                    "entity_loaded",
                    "fully_interactive",
                    "init",
                    "links_rendered",
                    "sharejs_connected"
                  ],
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "link_count": {
                  "description": "The total number of links (reference links, media field assets, rich text embedded block and inline entries, rich text embedded block assets, and rich text hyperlinked entries) in the entry on initial load",
                  "type": ["integer"]
                },
                "link_field_editor_instance_count": {
                  "description": "The overall number of reference and media field instances in an individual entry (1 locale field = 1 instance)",
                  "type": ["integer"]
                },
                "load_ms": {
                  "description": "Number of milliseconds since the initial load of the entry",
                  "type": ["integer"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "rich_text_editor_instance_count": {
                  "description": "The overall number of rich text editor instances in an individual entry (1 locale field editor = 1 instance)",
                  "type": ["integer"]
                },
                "slide_level": {
                  "description": "Level of the entry editor within the slides (zero-indexed, -1 if the slide was closed at the time the event is triggered)",
                  "type": ["integer"]
                },
                "slide_uuid": {
                  "description": "ID uniquely identifying the slide instance - does NOT uniquely identify the entry",
                  "type": ["string"]
                },
                "slides_controller_uuid": {
                  "description": "ID uniquely identifying the overall session and therefore all slides loaded around the same time within the same browser tab",
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                },
                "total_slide_count": {
                  "description": "The total number of slides open when the entry is initially loaded, default = 0 if there are no slides",
                  "type": ["integer"]
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "element:click",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "contexts": {
                  "type": ["string"]
                },
                "element_id": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "from_state": {
                  "type": ["string"]
                },
                "group_id": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "description": "ShareJS removal, CMA-only entity editor edit conflicts tracking. This event is tracked when persisting local editor changes fails due to a CMA version mismatch error. `local_entity` refers to the last CMA version of the entity known to the entity editor without local changes and before the conflict. All pending local changes are based on this entity version. `remote_entity` refers to the most recent version of the entity which has caused the version mismatch and thus might have conflicts with the local changes on top of `local_entity`.",
        "name": "entity_editor_edit_conflict",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "auto_conflict_resolution_version": {
                  "description": "Version of our editor's auto conflict resolution version. Should bump this whenever we fit to be able to only compare events of the same implemented version.",
                  "type": "integer"
                },
                "entity_id": {
                  "type": "string"
                },
                "entity_type": {
                  "enum": ["Entry", "Asset"],
                  "type": "string"
                },
                "environment_key": {
                  "type": ["string"]
                },
                "is_conflict_auto_resolvable": {
                  "description": "Whether or not the current editor implementation is able to resolve the conflict without the user's input.",
                  "type": "boolean"
                },
                "local_changes_paths": {
                  "description": "Comma separated paths `path,...` where `path` can be either `fields:${FIELD_ID}:${LOCALE_CODE}` for pending fields changes or `metadata:${NAME}` for pending metadata changes not persisted yet and on top of the `local_entity`. ID/code are public CMA identifiers, not internal CF IDs. Should only be `null` if there are too many paths to be tracked due to `maxLength` constraint.",
                  "type": ["string", "null"]
                },
                "local_entity_last_fetched_at_tstamp": {
                  "description": "Point in time when the most-up-to-date local in-memory `local_entity` was received by the editor.",
                  "type": "string"
                },
                "local_entity_state": {
                  "description": "The `local_entity` state before any local changes.",
                  "enum": ["draft", "published", "archived", "inaccessible"],
                  "type": "string"
                },
                "local_entity_updated_at_tstamp": {
                  "description": "entity.sys.updatedAt of the `local_entity`.",
                  "type": "string"
                },
                "local_entity_version": {
                  "description": "`entity.sys.version` of the `local_entity`.",
                  "type": "integer"
                },
                "local_state_change": {
                  "description": "Local pending state update that was not successful due to the conflict. `null` if there was no local state update.",
                  "enum": ["draft", "published", "archived", "inaccessible", null],
                  "type": ["string", "null"]
                },
                "organization_key": {
                  "type": "string"
                },
                "precomputed": {
                  "properties": {
                    "local_field_locale_changes_count": {
                      "description": "Total number of locally changed field locales on top of the `local_entity`: `count(onlyFieldPaths(local_changes_paths))`",
                      "type": "integer"
                    },
                    "local_metadata_changes_count": {
                      "description": "Total number of locally changed metadata properties on top of the `local_entity`: `count(onlyMetadataPaths(local_changes_paths))`",
                      "type": "integer"
                    },
                    "remote_field_locale_changes_count": {
                      "description": "Total number of field locales changed in `remote_entity` compared to `local_entity`: `count(onlyFieldPaths(remote_changes_paths))`",
                      "type": "integer"
                    },
                    "remote_metadata_changes_count": {
                      "description": "Total number of metadata properties changed in `remote_entity` compared to `local_entity`: `count(onlyMetadataPaths(remote_changes_paths))`",
                      "type": "integer"
                    },
                    "same_field_locale_conflicts_count": {
                      "description": "Pre-computed number of conflicts on same field locales: `count(intersection(onlyFieldPaths(local_changes_paths), onlyFieldPaths(remote_changes_paths)))`",
                      "type": "integer"
                    },
                    "same_metadata_conflicts_count": {
                      "description": "Pre-computed number of conflicts on same metadata property: `count(intersection(onlyMetadataPaths(local_changes_paths), onlyMetadataPaths(remote_changes_paths)))`",
                      "type": "integer"
                    }
                  },
                  "type": ["object"]
                },
                "remote_changes_paths": {
                  "description": "Comma separated paths as in `local_changes_paths` but for `remote_entity` fields or metadata with different values from `local_entity`. See `local_changes_paths` description for specifics and `null` case explanation.",
                  "type": ["string", "null"]
                },
                "remote_entity_state": {
                  "description": "The state of the `remote_entity` after the edit conflict.",
                  "enum": ["draft", "published", "archived", "inaccessible"],
                  "type": "string"
                },
                "remote_entity_updated_at_tstamp": {
                  "description": "entity.sys.updatedAt of the `remote_entity`.",
                  "type": "string"
                },
                "remote_entity_updated_by_user_id": {
                  "description": "entity.sys.updatedBy.sys.id of the `remote_entity`.",
                  "type": "string"
                },
                "remote_entity_version": {
                  "description": "`entity.sys.version` of the `remote_entity`.",
                  "type": "integer"
                },
                "space_key": {
                  "type": "string"
                }
              },
              "required": [
                "organization_key",
                "space_key",
                "entity_id",
                "entity_type",
                "local_changes_paths",
                "remote_changes_paths",
                "local_state_change",
                "local_entity_state",
                "remote_entity_state",
                "local_entity_version",
                "remote_entity_version",
                "local_entity_last_fetched_at_tstamp",
                "local_entity_updated_at_tstamp",
                "remote_entity_updated_at_tstamp",
                "remote_entity_updated_by_user_id",
                "is_conflict_auto_resolvable",
                "auto_conflict_resolution_version"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "EXPERIMENT for Snowplow -> Segment migration (hence \"_2\" suffix) | ShareJS removal, CMA-only entity editor edit conflicts tracking. This event is tracked when persisting local editor changes fails due to a CMA version mismatch error. `local_entity` refers to the last CMA version of the entity known to the entity editor without local changes and before the conflict. All pending local changes are based on this entity version. `remote_entity` refers to the most recent version of the entity which has caused the version mismatch and thus might have conflicts with the local changes on top of `local_entity`.",
        "name": "entity_editor_edit_conflict_2",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "auto_conflict_resolution_version": {
                  "description": "Version of our editor's auto conflict resolution version. Should bump this whenever we fit to be able to only compare events of the same implemented version.",
                  "type": "integer"
                },
                "entity_id": {
                  "type": "string"
                },
                "entity_type": {
                  "enum": ["Entry", "Asset"],
                  "type": "string"
                },
                "is_conflict_auto_resolvable": {
                  "description": "Whether or not the current editor implementation is able to resolve the conflict without the user's input.",
                  "type": "boolean"
                },
                "local_changes_paths": {
                  "description": "Comma separated paths `path,...` where `path` can be either `fields:${FIELD_ID}:${LOCALE_CODE}` for pending fields changes or `metadata:${NAME}` for pending metadata changes not persisted yet and on top of the `local_entity`. ID/code are public CMA identifiers, not internal CF IDs. Should only be `null` if there are too many paths to be tracked due to `maxLength` constraint.",
                  "type": ["string", "null"]
                },
                "local_entity_last_fetched_at_tstamp": {
                  "description": "Point in time when the most-up-to-date local in-memory `local_entity` was received by the editor.",
                  "type": "string"
                },
                "local_entity_state": {
                  "description": "The `local_entity` state before any local changes.",
                  "enum": ["draft", "published", "archived", "inaccessible"],
                  "type": "string"
                },
                "local_entity_updated_at_tstamp": {
                  "description": "entity.sys.updatedAt of the `local_entity`.",
                  "type": "string"
                },
                "local_entity_version": {
                  "description": "`entity.sys.version` of the `local_entity`.",
                  "type": "integer"
                },
                "local_state_change": {
                  "description": "Local pending state update that was not successful due to the conflict. `null` if there was no local state update.",
                  "enum": ["draft", "published", "archived", "inaccessible", null],
                  "type": ["string", "null"]
                },
                "organization_key": {
                  "type": "string"
                },
                "precomputed": {
                  "type": ["object"]
                },
                "remote_changes_paths": {
                  "description": "Comma separated paths as in `local_changes_paths` but for `remote_entity` fields or metadata with different values from `local_entity`. See `local_changes_paths` description for specifics and `null` case explanation.",
                  "type": ["string", "null"]
                },
                "remote_entity_state": {
                  "description": "The state of the `remote_entity` after the edit conflict.",
                  "enum": ["draft", "published", "archived", "inaccessible"],
                  "type": "string"
                },
                "remote_entity_updated_at_tstamp": {
                  "description": "entity.sys.updatedAt of the `remote_entity`.",
                  "type": "string"
                },
                "remote_entity_updated_by_user_id": {
                  "description": "entity.sys.updatedBy.sys.id of the `remote_entity`.",
                  "type": "string"
                },
                "remote_entity_version": {
                  "description": "`entity.sys.version` of the `remote_entity`.",
                  "type": "integer"
                },
                "space_key": {
                  "type": "string"
                }
              },
              "required": [
                "organization_key",
                "space_key",
                "entity_id",
                "entity_type",
                "local_changes_paths",
                "remote_changes_paths",
                "local_state_change",
                "local_entity_state",
                "remote_entity_state",
                "local_entity_version",
                "remote_entity_version",
                "local_entity_last_fetched_at_tstamp",
                "local_entity_updated_at_tstamp",
                "remote_entity_updated_at_tstamp",
                "remote_entity_updated_by_user_id",
                "is_conflict_auto_resolvable",
                "auto_conflict_resolution_version"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "name": "entry_created",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "content_type_id": {
                  "type": "string"
                },
                "entry_ct_entry_reference_fields_count": {
                  "type": "integer"
                },
                "entry_ct_fields_count": {
                  "type": ["integer", "null"]
                },
                "entry_id": {
                  "type": "string"
                },
                "entry_version": {
                  "type": "integer"
                },
                "environment_key": {
                  "type": "string"
                },
                "event_origin": {
                  "type": "string"
                },
                "organization_key": {
                  "type": "string"
                },
                "space_key": {
                  "type": "string"
                }
              },
              "required": ["organization_key", "space_key"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Schema of publishing an entry in the webapp",
        "name": "entry_publish",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "content_type_id": {
                  "type": "string"
                },
                "entry_ct_entry_reference_fields_count": {
                  "type": "integer"
                },
                "entry_ct_fields_count": {
                  "type": ["integer", "null"]
                },
                "entry_id": {
                  "type": "string"
                },
                "entry_version": {
                  "type": "integer"
                },
                "environment_key": {
                  "type": "string"
                },
                "event_origin": {
                  "type": "string"
                },
                "organization_key": {
                  "type": "string"
                },
                "space_key": {
                  "type": "string"
                }
              },
              "required": ["organization_key", "space_key"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Schema for tracking entry page views",
        "name": "entry_view",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "content_type_id": {
                  "type": ["string"]
                },
                "content_type_name": {
                  "type": ["string"]
                },
                "contexts": {
                  "type": ["string"]
                },
                "editor_type": {
                  "enum": ["bulk_editor", "slide_in_editor", "entry_editor"],
                  "type": "string"
                },
                "entry_id": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "slide_in_level": {
                  "type": "integer"
                },
                "space_key": {
                  "type": ["string"]
                }
              },
              "required": [
                "contexts",
                "organization_key",
                "space_key",
                "entry_id",
                "content_type_id",
                "content_type_name",
                "editor_type"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Environment aliases tracking",
        "name": "environment_aliases",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "description": "refers to the action performed",
                  "type": ["string", "null"]
                },
                "environment_alias_id": {
                  "description": "refers to the internal id of the environment alias",
                  "type": ["integer"]
                },
                "environment_alias_key": {
                  "description": "refers to the key of the environment alias",
                  "type": ["string", "null"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "from_environment_id": {
                  "description": "refers to the key of the previously aliased environment",
                  "type": ["string", "null"]
                },
                "from_environment_uuid": {
                  "description": "refers to the UUID of the previously aliased environment",
                  "type": ["string", "null"]
                },
                "inferred_intent": {
                  "description": "This field will contain the X-Contentful-Header sent by sdks and the webapp, allowing us to track the intent of the creation.",
                  "type": ["string", "null"]
                },
                "organization_key": {
                  "description": "refers to organization key",
                  "type": ["string", "null"]
                },
                "platform": {
                  "description": "this will be `web-app` if the webapp sent the request, or anything else the x-contentful-header contains in the platform field, if existing. Null otherwise.",
                  "type": ["string", "null"]
                },
                "space_key": {
                  "description": "refers to space key",
                  "type": ["string"]
                },
                "to_environment_id": {
                  "description": "refers to the key of the newly aliased environment",
                  "type": ["string", "null"]
                },
                "to_environment_uuid": {
                  "description": "refers to the UUID of the newly aliased environment",
                  "type": ["string", "null"]
                },
                "user_agent": {
                  "description": "refers to the http user agent header sent",
                  "type": ["string", "null"]
                }
              },
              "required": [
                "organization_key",
                "space_key",
                "action",
                "environment_alias_id",
                "environment_alias_key",
                "to_environment_id"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Event is used for tracking goals achieved in a new feature that is being tested.",
        "name": "experiment_goal_achieved",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "description": "",
                  "type": "string"
                },
                "context": {
                  "description": "",
                  "type": "string"
                },
                "environment_key": {
                  "description": "",
                  "type": "string"
                },
                "experiment_id": {
                  "description": "",
                  "type": "string"
                },
                "experiment_variation": {
                  "description": "",
                  "type": "string"
                },
                "organization_key": {
                  "description": "",
                  "type": "string"
                },
                "space_key": {
                  "description": "",
                  "type": "string"
                },
                "value": {
                  "description": "",
                  "type": "number"
                }
              },
              "required": ["action", "experiment_id", "experiment_variation"],
              "type": "object"
            },
            "traits": {
              "type": "object"
            }
          },
          "required": ["properties"],
          "type": "object"
        },
        "version": 1
      },
      {
        "description": "Event is used for tracking user interactions during new features that are being tested.",
        "name": "experiment_interacted",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "description": "",
                  "type": "string"
                },
                "context": {
                  "description": "",
                  "type": "string"
                },
                "environment_key": {
                  "description": "",
                  "type": "string"
                },
                "experiment_id": {
                  "description": "",
                  "type": "string"
                },
                "experiment_variation": {
                  "description": "",
                  "type": "string"
                },
                "organization_key": {
                  "description": "",
                  "type": "string"
                },
                "space_key": {
                  "description": "",
                  "type": "string"
                },
                "step": {
                  "description": "",
                  "type": "number"
                },
                "value": {
                  "description": "",
                  "type": "number"
                }
              },
              "required": ["action", "experiment_id", "experiment_variation"],
              "type": "object"
            },
            "traits": {
              "type": "object"
            }
          },
          "required": ["properties"],
          "type": "object"
        },
        "version": 1
      },
      {
        "description": "Allows to track which user is part of a UI experiment or a particular A/B test variation, e.g. controlled through `LaunchDarkly` or another kind of feature flag.",
        "name": "experiment_started",
        "rules": {
          "labels": {},
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "environment_key": {
                  "type": ["string"]
                },
                "experiment_id": {
                  "description": "The experiment name the current user is part of",
                  "type": "string"
                },
                "experiment_variation": {
                  "description": "The experiment variation the current user is assigned to",
                  "type": "string"
                },
                "organization_key": {
                  "description": "Current organization key",
                  "type": "string"
                },
                "space_key": {
                  "description": "Current space key",
                  "type": "string"
                }
              },
              "required": ["experiment_id", "experiment_variation"],
              "type": "object"
            },
            "traits": {
              "type": "object"
            }
          },
          "required": ["properties"],
          "type": "object"
        },
        "version": 1
      },
      {
        "description": "Extension was activated",
        "name": "extension_activate",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "environment_key": {
                  "type": ["string"]
                },
                "extension_definition_id": {
                  "description": "Extenstion Indentifyer",
                  "type": ["string", "null"]
                },
                "extension_id": {
                  "description": "Extenstion Indentifyer",
                  "type": "string"
                },
                "location": {
                  "description": "Dunno",
                  "type": "string"
                },
                "organization_key": {
                  "description": "Refers to organization_key",
                  "type": ["string", "null"]
                },
                "space_key": {
                  "description": "Refers to space_key",
                  "type": "string"
                }
              },
              "required": ["space_key", "extension_id", "location"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Extension set a value of a field",
        "name": "extension_set_value",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "content_type_id": {
                  "type": "string"
                },
                "entry_id": {
                  "type": "string"
                },
                "environment_key": {
                  "type": ["string"]
                },
                "extension_definition_id": {
                  "type": ["string", "null"]
                },
                "extension_id": {
                  "type": "string"
                },
                "field_id": {
                  "type": "string"
                },
                "locale_code": {
                  "type": "string"
                },
                "organization_key": {
                  "description": "Refers to organization_key",
                  "type": ["string", "null"]
                },
                "space_key": {
                  "description": "Refers to space_key",
                  "type": "string"
                }
              },
              "required": [
                "space_key",
                "entry_id",
                "content_type_id",
                "field_id",
                "locale_code",
                "extension_id"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Bulk references editor feature tracking",
        "name": "feature_bulk_editor",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "type": ["string"]
                },
                "content_type_id": {
                  "type": ["string", "null"]
                },
                "entry_id": {
                  "type": ["string", "null"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "num_edited_entries": {
                  "type": ["integer", "null"]
                },
                "num_published_entries": {
                  "type": ["integer", "null"]
                },
                "option_added": {
                  "type": ["boolean", "null"]
                },
                "option_existing": {
                  "type": ["boolean", "null"]
                },
                "organization_key": {
                  "type": ["string", "null"]
                },
                "parent_entry_id": {
                  "type": ["string", "null"]
                },
                "ref_count": {
                  "type": ["integer", "null"]
                },
                "space_key": {
                  "type": ["string"]
                },
                "status": {
                  "type": ["string", "null"]
                }
              },
              "required": ["space_key", "action"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Schema of interacting with a reference entry",
        "name": "feature_reference_action",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "content_type_id": {
                  "type": "string"
                },
                "environment_key": {
                  "type": ["string"]
                },
                "event_type": {
                  "type": "string"
                },
                "organization_key": {
                  "type": "string"
                },
                "parent_entry_id": {
                  "type": "string"
                },
                "space_key": {
                  "type": "string"
                }
              },
              "required": [
                "organization_key",
                "space_key",
                "content_type_id",
                "event_type",
                "parent_entry_id"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Snapshot tracking feature",
        "name": "feature_snapshot",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "type": ["string"]
                },
                "entry_fields_count": {
                  "type": ["integer", "null"]
                },
                "entry_id": {
                  "type": ["string"]
                },
                "entry_version": {
                  "type": ["integer", "null"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "option_changes_discarded": {
                  "type": ["boolean", "null"]
                },
                "option_full_restore": {
                  "type": ["boolean", "null"]
                },
                "option_show_diffs_only": {
                  "type": ["boolean", "null"]
                },
                "organization_key": {
                  "type": ["string", "null"]
                },
                "restore_fields_count": {
                  "type": ["integer", "null"]
                },
                "snapshot_id": {
                  "type": ["string", "null"]
                },
                "snapshot_version": {
                  "type": ["integer", "null"]
                },
                "source": {
                  "type": ["string", "null"]
                },
                "space_key": {
                  "type": ["string"]
                }
              },
              "required": ["space_key", "entry_id", "action"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Action tracking for Single Sign-On (SSO) Self Configuration via the webapp",
        "name": "feature_sso_self_configuration",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "description": "The action being performed",
                  "type": "string"
                },
                "connection_test_result_errors": {
                  "description": "If the action is `connection_test_result`, the errors that occurred if the status is failure",
                  "type": ["array", "null"]
                },
                "connection_test_result_status": {
                  "description": "If the action is `connection_test_result`, the status of the latest test result",
                  "type": ["string", "null"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "description": "The organization that this is happening in",
                  "type": ["string", "null"]
                }
              },
              "required": ["organization_key", "action"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Generic event for tracking text editor widgets (e.g. StructuredText or Markdown).",
        "name": "feature_text_editor",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "description": "The action the user has triggered within the text editor",
                  "type": ["string"]
                },
                "action_origin": {
                  "description": "Where the action was triggered, e.g. toolbar icon or shortcut (`null` means we don't know)",
                  "type": ["string", "null"]
                },
                "additional_data": {
                  "description": "Allows to add additional action specific data",
                  "type": ["object", "null"]
                },
                "character_count_after": {
                  "description": "Character count after the action was applied",
                  "type": ["integer", "null"]
                },
                "character_count_before": {
                  "description": "Character count before the action was applied (useful for paste action)",
                  "type": ["integer", "null"]
                },
                "character_count_selection": {
                  "description": "The number of characters selected when the action was triggered (e.g. useful to know whether a hyperlink is mostly applied to a selection or not)",
                  "type": ["integer", "null"]
                },
                "content_type_id": {
                  "description": "content_api content_type ID of the entry with the text editor",
                  "type": ["string"]
                },
                "editor_name": {
                  "description": "The editor widget name (use front-end widget ID)",
                  "type": "string"
                },
                "entry_id": {
                  "description": "content_api entry ID with the text editor widget",
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "field_id": {
                  "description": "ID of field with the text editor widget",
                  "type": ["string"]
                },
                "field_locale": {
                  "description": "Locale ID complementing the `field_id`, null if the action is not for one particular locale only.",
                  "type": ["string", "null"]
                },
                "is_fullscreen": {
                  "description": "Whether the action was triggered while full-screen mode was active",
                  "type": ["boolean"]
                },
                "organization_key": {
                  "description": "Gatekeeper organization KEY",
                  "type": ["string"]
                },
                "space_key": {
                  "description": "Gatekeeper space KEY",
                  "type": ["string"]
                }
              },
              "required": [
                "organization_key",
                "space_key",
                "content_type_id",
                "entry_id",
                "field_id",
                "field_locale",
                "editor_name",
                "action",
                "is_fullscreen"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "name": "global:app_loaded",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "type": ["string"]
                },
                "contexts": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "global:dialog",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "data": {
                  "properties": {
                    "action": {
                      "type": ["string"]
                    },
                    "environment_key": {
                      "type": ["string"]
                    },
                    "name": {
                      "type": ["string"]
                    },
                    "organization_key": {
                      "type": ["string"]
                    },
                    "purpose": {
                      "type": ["string"]
                    },
                    "space_key": {
                      "type": ["string"]
                    }
                  },
                  "type": "object"
                },
                "schema": {
                  "type": ["string"]
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "description": "Emitted when the user cancels the job",
        "name": "jobs_cancel",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "job_id": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                }
              },
              "required": ["organization_key", "space_key", "job_id", "action"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Emitted when a user creates a job",
        "name": "jobs_create",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "job_id": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "scheduled_for": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                },
                "timezone_offset": {
                  "type": ["integer"]
                }
              },
              "required": [
                "organization_key",
                "space_key",
                "action",
                "job_id",
                "scheduled_for",
                "timezone_offset"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Schema for tracking every state transition in the user interface",
        "name": "page_view",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "environment_key": {
                  "type": ["string"]
                },
                "from_state": {
                  "type": ["string"]
                },
                "from_state_params": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                },
                "to_state": {
                  "type": ["string"]
                },
                "to_state_params": {
                  "type": ["string"]
                }
              },
              "required": ["to_state"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "name": "personal_access_token:action",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "data": {
                  "properties": {
                    "action": {
                      "type": ["string"]
                    },
                    "personal_access_token_id": {
                      "type": ["string"]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "release_created",
        "rules": {
          "labels": {},
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "environment_key": {
                  "description": "",
                  "type": "string"
                },
                "organization_key": {
                  "description": "",
                  "type": "string"
                },
                "release_id": {
                  "description": "",
                  "type": "string"
                },
                "space_key": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": ["environment_key", "organization_key", "release_id", "space_key"],
              "type": "object"
            },
            "traits": {
              "type": "object"
            }
          },
          "required": ["properties"],
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "release_dialog_box",
        "rules": {
          "labels": {},
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "description": "",
                  "pattern": "open|close",
                  "type": "string"
                },
                "environment_key": {
                  "description": "",
                  "type": "string"
                },
                "organization_key": {
                  "description": "",
                  "type": "string"
                },
                "purpose": {
                  "description": "",
                  "pattern": "submit|create|cancel",
                  "type": "string"
                },
                "space_key": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": ["action", "environment_key", "organization_key", "purpose", "space_key"],
              "type": "object"
            },
            "traits": {
              "type": "object"
            }
          },
          "required": ["properties"],
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "release_entity_added",
        "rules": {
          "labels": {},
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "asset_count": {
                  "description": "",
                  "type": "integer"
                },
                "entry_count": {
                  "description": "",
                  "type": "integer"
                },
                "environment_key": {
                  "description": "",
                  "type": "string"
                },
                "organization_key": {
                  "description": "",
                  "type": "string"
                },
                "release_id": {
                  "description": "",
                  "type": "string"
                },
                "space_key": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "asset_count",
                "entry_count",
                "environment_key",
                "organization_key",
                "release_id",
                "space_key"
              ],
              "type": "object"
            },
            "traits": {
              "type": "object"
            }
          },
          "required": ["properties"],
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "release_entity_removed",
        "rules": {
          "labels": {},
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "entity_id": {
                  "description": "",
                  "type": "string"
                },
                "entity_type": {
                  "description": "",
                  "pattern": "Entry|Asset",
                  "type": "string"
                },
                "environment_key": {
                  "description": "",
                  "type": "string"
                },
                "organization_key": {
                  "description": "",
                  "type": "string"
                },
                "release_id": {
                  "description": "",
                  "type": "string"
                },
                "space_key": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "entity_id",
                "entity_type",
                "environment_key",
                "organization_key",
                "release_id",
                "space_key"
              ],
              "type": "object"
            },
            "traits": {
              "type": "object"
            }
          },
          "required": ["properties"],
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "search:entry_clicked",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "entity_type": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "index": {
                  "type": ["integer"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "result_count": {
                  "type": ["integer"]
                },
                "search_filters": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "search_query": {
                  "type": ["string"]
                },
                "sequence_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "search:filter_added",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "entity_type": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "filter": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "result_count": {
                  "type": ["integer"]
                },
                "search_filters": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "search_query": {
                  "type": ["string"]
                },
                "sequence_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "search:filter_removed",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "entity_type": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "filter": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "result_count": {
                  "type": ["integer"]
                },
                "search_filters": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "search_query": {
                  "type": ["string"]
                },
                "sequence_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "search:query_changed",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "entity_type": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "result_count": {
                  "type": ["integer"]
                },
                "search_filters": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "search_query": {
                  "type": ["string"]
                },
                "sequence_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "search:search_performed",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "content_type_id": {},
                "entity_type": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "result_count": {
                  "type": ["integer"]
                },
                "search_filters": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "search_query": {
                  "type": ["string"]
                },
                "sequence_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "search:view_created",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "content_type_id": {},
                "entity_type": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "folder_id": {
                  "type": ["string"]
                },
                "folder_title": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "search_filters": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "search_query": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                },
                "view_id": {
                  "type": ["string"]
                },
                "view_type": {
                  "type": ["string"]
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "search:view_deleted",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "entity_type": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                },
                "view_id": {
                  "type": ["string"]
                },
                "view_type": {
                  "type": ["string"]
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "name": "search:view_loaded",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "content_type_id": {},
                "entity_type": {
                  "type": ["string"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "result_count": {
                  "type": ["integer"]
                },
                "search_filters": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "search_query": {
                  "type": ["string"]
                },
                "sequence_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                },
                "view_id": {
                  "type": ["string"]
                },
                "view_roles": {},
                "view_title": {
                  "type": ["string"]
                },
                "view_type": {
                  "type": ["string"]
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "description": "Schema for a search performed in the top bar of the webapp",
        "name": "search_perform",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "content_type_id": {
                  "type": ["string", "null"]
                },
                "entity_type": {
                  "type": "string"
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "result_count": {
                  "type": ["integer"]
                },
                "search_filters": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "search_query": {
                  "type": ["string", "null"]
                },
                "sequence_key": {
                  "type": ["string", "null"]
                },
                "space_key": {
                  "type": ["string"]
                }
              },
              "required": [
                "organization_key",
                "space_key",
                "entity_type",
                "search_query",
                "result_count"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Schema to track slide in editor usage",
        "name": "slide_in_editor",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "type": "string"
                },
                "current_slide_level": {
                  "type": ["integer"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": "string"
                },
                "peek_hover_time_ms": {
                  "type": ["integer"]
                },
                "space_key": {
                  "type": "string"
                },
                "target_slide_level": {
                  "type": ["integer"]
                }
              },
              "required": ["organization_key", "space_key", "current_slide_level"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Legacy Snowplow schema (originally `space_create`) for tracking space creation. Heavily relies on Snowplow contexts. Numbers tracked went down to almost 0 since Nov 2020 presumably due to the new space creation flow which doesn't track space creation with this schema anymore.",
        "name": "space:create",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "contexts": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "traits": {}
          },
          "type": "object"
        },
        "version": 1
      },
      {
        "description": "Schema to track the translation sidebar widgets",
        "name": "translation_sidebar",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "action": {
                  "description": "`toggle_widget_mode` is triggered every time the translation sidebar mode is toggled from single to multiple locales (or vice versa). `deselect_active_locale` is triggered when an editor is using the multiple locale mode and deselects one of the active locales using the pills in the sidebar widget. `update_active_locales` is triggered when an editor is using the multiple locale mode and updates the active locales using the locale update modal. `change_focused_locale` is triggered when an editor is using the single locale mode and changes the focused locale using the sidebar locale dropdown.",
                  "enum": [
                    "toggle_widget_mode",
                    "deselect_active_locale",
                    "update_active_locales",
                    "change_focused_locale"
                  ],
                  "type": "string"
                },
                "current_active_locale_count": {
                  "description": "The total number of locales activated by the editor as a consequence of an `update_active_locales` or `deselect_active_locale` action.",
                  "type": ["integer", "null"]
                },
                "current_mode": {
                  "description": "The widget mode from which the action is executed. When the action is `toggle_widget_mode`, this refers to the mode to which the editor has toggled. Will always be `single` for `change_focused_locale`. Will always be `multiple` for `deselect_active_locale` or `update_active_locales`.",
                  "enum": ["single", "multiple"],
                  "type": "string"
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": "string"
                },
                "previous_active_locale_count": {
                  "description": "The total number of active locales prior to the triggering of an `update_active_locales` or `deselect_active_locale` action.",
                  "type": ["integer", "null"]
                },
                "space_key": {
                  "type": "string"
                }
              },
              "required": ["organization_key", "space_key", "action", "current_mode"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "UI Extension Install Schema",
        "name": "ui_extension_install",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "environment_key": {
                  "type": ["string"]
                },
                "field_types": {
                  "type": ["array", "null"]
                },
                "installation_params": {
                  "type": ["array", "null"]
                },
                "instance_params": {
                  "type": ["array", "null"]
                },
                "name": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                },
                "src": {
                  "type": ["string", "null"]
                },
                "type": {
                  "type": ["string", "null"]
                },
                "url": {
                  "type": ["string", "null"]
                }
              },
              "required": ["organization_key", "space_key", "name"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "UI Extension Save Schema",
        "name": "ui_extension_save",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "fieldTypes": {
                  "type": ["string", "null"]
                },
                "installationParams": {
                  "type": ["string", "null"]
                },
                "instanceParams": {
                  "type": ["string", "null"]
                },
                "name": {
                  "type": ["string"]
                },
                "src": {
                  "type": ["string", "null"]
                },
                "ui_extension_id": {
                  "type": "string"
                },
                "url": {
                  "type": ["string", "null"]
                }
              },
              "required": ["ui_extension_id", "name", "src"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Saving webhook in the UI",
        "name": "ui_webhook_editor_save",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "body_transformation": {
                  "type": ["string", "null"]
                },
                "content_type_header": {
                  "type": ["string", "null"]
                },
                "custom_headers": {
                  "type": ["array", "null"]
                },
                "environment_key": {
                  "type": ["string"]
                },
                "filters": {
                  "type": ["string", "null"]
                },
                "method": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                },
                "template_id": {
                  "type": ["string", "null"]
                },
                "topics": {
                  "type": ["array", "null"]
                },
                "url": {
                  "type": ["string"]
                },
                "uses_http_basic": {
                  "type": ["boolean"]
                },
                "version": {
                  "type": ["integer"]
                },
                "webhook_id": {
                  "type": ["string"]
                },
                "webhook_name": {
                  "type": ["string"]
                }
              },
              "required": [
                "organization_key",
                "space_key",
                "webhook_id",
                "version",
                "webhook_name",
                "url",
                "uses_http_basic"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Schema of creating a view in the webapp",
        "name": "view_create",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "content_type_id": {
                  "type": ["string", "null"]
                },
                "entity_type": {
                  "type": "string"
                },
                "environment_key": {
                  "type": ["string"]
                },
                "folder_id": {
                  "type": ["string"]
                },
                "folder_title": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "search_query": {
                  "type": ["string", "null"]
                },
                "space_key": {
                  "type": ["string"]
                },
                "view_id": {
                  "type": ["string"]
                }
              },
              "required": [
                "organization_key",
                "space_key",
                "entity_type",
                "search_query",
                "content_type_id",
                "folder_id",
                "folder_title",
                "view_id"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Schema of delete a view in the webapp",
        "name": "view_delete",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "entity_type": {
                  "type": "string"
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                },
                "view_id": {
                  "type": ["string"]
                },
                "view_type": {
                  "type": "string"
                }
              },
              "required": ["organization_key", "space_key", "entity_type", "view_id", "view_type"]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Schema of editing a view in the webapp",
        "name": "view_edit",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "change_property": {
                  "type": ["string"]
                },
                "entity_type": {
                  "type": "string"
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "space_key": {
                  "type": ["string"]
                },
                "view_id": {
                  "type": ["string"]
                },
                "view_roles": {
                  "type": ["string", "null"]
                },
                "view_title": {
                  "type": ["string"]
                }
              },
              "required": [
                "organization_key",
                "space_key",
                "entity_type",
                "view_id",
                "view_title",
                "view_roles",
                "change_property"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      },
      {
        "description": "Schema of loading a view in the webapp",
        "name": "view_load",
        "rules": {
          "properties": {
            "context": {},
            "properties": {
              "properties": {
                "content_type_id": {
                  "type": ["string", "null"]
                },
                "entity_type": {
                  "type": "string"
                },
                "environment_key": {
                  "type": ["string"]
                },
                "organization_key": {
                  "type": ["string"]
                },
                "search_query": {
                  "type": ["string", "null"]
                },
                "sequence_key": {
                  "type": ["string", "null"]
                },
                "space_key": {
                  "type": ["string"]
                },
                "view_id": {
                  "type": ["string"]
                },
                "view_roles": {
                  "type": ["string", "null"]
                },
                "view_title": {
                  "type": ["string"]
                },
                "view_type": {
                  "type": "string"
                }
              },
              "required": [
                "organization_key",
                "space_key",
                "entity_type",
                "search_query",
                "content_type_id",
                "view_id",
                "view_type",
                "view_title",
                "view_roles"
              ]
            },
            "traits": {}
          }
        },
        "version": 1
      }
    ],
    "global": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "properties": {
        "context": {
          "type": "object"
        },
        "properties": {
          "type": "object"
        },
        "traits": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "group_traits": [],
    "identify_traits": []
  },
  "update_time": "2021-06-16T11:57:48.000Z"
}
