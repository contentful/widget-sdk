'use strict';

angular.module('contentful').directive('cfMarkdownEditorBridge', function () {
  return {
    restrict: 'E',
    template: JST['cf_markdown_editor_bridge'](),
    link: function (scope, el) {
      var textarea = el.find('.markdown-transfer-textarea').first();

      // first, we create separate object for editor's field data
      scope.editorFieldData = {};
      // and we propagate every OT change into this copy
      // "value" is displayed and modified by Markdown widget
      scope.$watch('fieldData.value', function (val) {
        if (val) { scope.editorFieldData.value = val; }
      });

      // when "value" in Markdown editor is changed,
      // we set value of transfer textarea and trigger "input" event
      // it's like typing all characters generated by Markdown
      // widget into normal textarea field, using keyboard
      scope.$watch('editorFieldData.value', function (val) {
        textarea.val(val);
        textarea.trigger('input');
      });

      // when textarea value changes, we dispatch "paste" event
      // on transfer textarea - this way OT knows about the change
      scope.$watch(function () {
        return textarea.val();
      }, dispatchPasteEvent);

      function dispatchPasteEvent() {
        /*global Event*/
        var event;
        try {
          event = new Event('paste');
        } catch(e) {
          event = document.createEvent('Event');
          event.initEvent('paste', true, true);
        }
        textarea.get(0).dispatchEvent(event);
      }
    }
  };
});
