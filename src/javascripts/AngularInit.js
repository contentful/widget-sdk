// https://weblogs.asp.net/dwahlin/dynamically-loading-controllers-and-views-with-angularjs-and-requirejs

import _ from 'lodash';
import angular from 'angular';

import registerAuthorization from 'services/authorization.es6';
import registerClient from 'services/client.es6';
import registerSpaceContext from 'classes/spaceContext.es6';
import registerClientController from 'components/client/ClientController.es6';
import registerStatesConfig from 'states/config.es6';

import registerAppContainerDirective from 'components/app_container/cfAppContainerDirective.es6';
import registerSidepanelDirective from 'navigation/Sidepanel/directive.es6';
import registerComponentBridgeDirective from 'ui/Framework/CfComponentBridgeDirective.es6';
import registerSidepanelTriggerDirective from 'navigation/Sidepanel/TriggerDirective.es6';
import registerAccountDropdownDirective from 'navigation/accountDropdownDirective.es6';
import registerPersistentNotification from 'components/shared/persistent_notification/cfPersistentNotificationDirective.es6';

import registerStateChangeHandlers from 'navigation/stateChangeHandlers.es6';
import registerModalDialog from 'services/modalDialogService.es6';

export default angular
  .module('contentful/init', [])
  .config([
    '$controllerProvider',
    '$compileProvider',
    '$filterProvider',
    '$provide',
    ($controllerProvider, $compileProvider, $filterProvider, $provide) => {
      angular.module('contentful/init').register = {
        controller: $controllerProvider.register,
        directive: $compileProvider.directive,
        filter: $filterProvider.register,
        factory: $provide.factory,
        service: $provide.service,
        constant: $provide.constant,
        provider: $provide.provider,
        value: $provide.value
      };
    }
  ])
  .run([
    '$injector',
    async $injector => {
      angular.module('contentful/init').getModule = $injector.get;
      angular.module('contentful/init').loaded = false;

      // ClientController and cf-app-container must be available immediately for the app to
      // load correctly. Its dependencies and the directives in the app container template
      // are also required. The other modules below can be imported lazily.
      registerAuthorization();
      registerClient();
      registerSpaceContext();
      registerClientController();
      registerStatesConfig();

      // cf-app-container
      registerAppContainerDirective();

      // cf-persistent-notification
      registerPersistentNotification();

      // cf-nav-sidepanel
      registerSidepanelDirective();

      // cf-nav-sidepanel-trigger
      registerSidepanelTriggerDirective();

      // cf-account-dropdown
      registerAccountDropdownDirective();

      // cf-component-bridge
      registerComponentBridgeDirective();

      registerStateChangeHandlers();
      registerModalDialog();

      // This list is automatically generated by tools/bin/angular_dependency_order.js. Do not modify.
      const { default: analyticsAnalyticsConsoleEs6 } = await import(
        'analytics/analyticsConsole.es6'
      );
      const { default: dataSharejsUtilsEs6 } = await import('data/sharejs/utils.es6');
      const { default: appEntityEditorStringFieldEs6 } = await import(
        'app/entity_editor/stringField.es6'
      );
      const { default: appEntityEditorPresenceHubEs6 } = await import(
        'app/entity_editor/presenceHub.es6'
      );
      const { default: accessControlUserListHandlerEs6 } = await import(
        'access_control/UserListHandler.es6'
      );
      const { default: uiCommandEs6 } = await import('ui/command.es6');
      const { default: accessControlRoleRemoverEs6 } = await import(
        'access_control/RoleRemover.es6'
      );
      const { default: searchListQueryEs6 } = await import('search/listQuery.es6');
      const { default: searchEntitySelectorEntitySelectorEs6 } = await import(
        'search/EntitySelector/entitySelector.es6'
      );
      const { default: accessControlUsersUserListDirectiveEs6 } = await import(
        'access_control/Users/UserListDirective.es6'
      );
      const { default: accessControlRoleListDirectiveEs6 } = await import(
        'access_control/RoleListDirective.es6'
      );
      const { default: accessControlUserSpaceInvitationControllerEs6 } = await import(
        'access_control/UserSpaceInvitationController.es6'
      );
      const { default: accountCfNewOrganizationMembershipEs6 } = await import(
        'account/cfNewOrganizationMembership.es6'
      );
      const { default: appContentModelEditorAddFieldDialogControllerEs6 } = await import(
        'app/ContentModel/Editor/addFieldDialogController.es6'
      );
      const { default: appContentModelEditorApiNameControllerEs6 } = await import(
        'app/ContentModel/Editor/apiNameController.es6'
      );
      const { default: appContentModelEditorCfApiNameShadowDirectiveEs6 } = await import(
        'app/ContentModel/Editor/cfApiNameShadowDirective.es6'
      );
      const { default: navigationCloseStateEs6 } = await import('navigation/closeState.es6');
      const { default: componentsFieldDialogFieldDialogEs6 } = await import(
        'components/field_dialog/fieldDialog.es6'
      );
      const { default: appContentModelEditorContentTypeEditorControllerEs6 } = await import(
        'app/ContentModel/Editor/contentTypeEditorController.es6'
      );
      const { default: appApiApiKeyListApiKeyListDirectiveEs6 } = await import(
        'app/api/api_key_list/apiKeyListDirective.es6'
      );
      const { default: componentsAppContainerEntityCreatorEs6 } = await import(
        'components/app_container/entityCreator.es6'
      );
      const { default: appAssetEditorCfAssetEditorDirectiveEs6 } = await import(
        'app/asset_editor/cfAssetEditorDirective.es6'
      );
      const { default: filtersEs6 } = await import('filters.es6');
      const { default: appEntityEditorEntityHelpersEs6 } = await import(
        'app/entity_editor/entityHelpers.es6'
      );
      const { default: appEntityEditorBulkEditorCfBulkEditorDirectiveEs6 } = await import(
        'app/entity_editor/bulk_editor/cfBulkEditorDirective.es6'
      );
      const { default: appEntityEditorBulkEditorCfBulkEntityEditorDirectiveEs6 } = await import(
        'app/entity_editor/bulk_editor/cfBulkEntityEditorDirective.es6'
      );
      const { default: appEntityEditorCfEntityFieldDirectiveEs6 } = await import(
        'app/entity_editor/cfEntityFieldDirective.es6'
      );
      const { default: appEntityEditorCfTestEntryEditorDirectiveEs6 } = await import(
        'app/entity_editor/cfTestEntryEditorDirective.es6'
      );
      const { default: appEntityEditorCfWidgetRendererDirectiveEs6 } = await import(
        'app/entity_editor/cfWidgetRendererDirective.es6'
      );
      const { default: appEntityEditorFieldLocaleControllerEs6 } = await import(
        'app/entity_editor/fieldLocaleController.es6'
      );
      const { default: appEntityEditorStateControllerEs6 } = await import(
        'app/entity_editor/stateController.es6'
      );
      const { default: appEntryEditorCfEntryEditorDirectiveEs6 } = await import(
        'app/entry_editor/cfEntryEditorDirective.es6'
      );
      const { default: appEntryEditorCfWidgetApiDirectiveEs6 } = await import(
        'app/entry_editor/cfWidgetApiDirective.es6'
      );
      const { default: appEntryEditorEntryActionsControllerEs6 } = await import(
        'app/entry_editor/entryActionsController.es6'
      );
      const { default: appEntryEditorFormWidgetsControllerEs6 } = await import(
        'app/entry_editor/formWidgetsController.es6'
      );
      const { default: appHomeCfTrackCopyEventEs6 } = await import('app/home/cfTrackCopyEvent.es6');
      const { default: appHomeContactUsContactUsSpaceHomeDirectiveEs6 } = await import(
        'app/home/contactUs/contactUsSpaceHomeDirective.es6'
      );
      const { default: servicesContentfulClientEs6 } = await import(
        'services/contentfulClient.es6'
      );
      const { default: appSnapshotsCfSnapshotPresenterEs6 } = await import(
        'app/snapshots/cfSnapshotPresenter.es6'
      );
      const { default: appSnapshotsCfSnapshotSelectorEs6 } = await import(
        'app/snapshots/cfSnapshotSelector.es6'
      );
      const { default: appSnapshotsSnapshotComparatorEs6 } = await import(
        'app/snapshots/snapshotComparator.es6'
      );
      const { default: appWidgetsCfBooleanEditorDirectiveEs6 } = await import(
        'app/widgets/cfBooleanEditorDirective.es6'
      );
      const { default: appWidgetsCfCheckboxEditorDirectiveEs6 } = await import(
        'app/widgets/cfCheckboxEditorDirective.es6'
      );
      const { default: appWidgetsCfFileEditorDirectiveEs6 } = await import(
        'app/widgets/cfFileEditorDirective.es6'
      );
      const { default: appWidgetsCfListInputEditorDirectiveEs6 } = await import(
        'app/widgets/cfListInputEditorDirective.es6'
      );
      const { default: appWidgetsCfRatingEditorDirectiveEs6 } = await import(
        'app/widgets/cfRatingEditorDirective.es6'
      );
      const { default: appWidgetsDatetimeCfEntryDatetimeEditorDirectiveEs6 } = await import(
        'app/widgets/datetime/cfEntryDatetimeEditorDirective.es6'
      );
      const { default: appWidgetsJsonCfJsonEditorCodeEditorDirectiveEs6 } = await import(
        'app/widgets/json/cfJsonEditorCodeEditorDirective.es6'
      );
      const { default: appWidgetsJsonCfJsonEditorDirectiveEs6 } = await import(
        'app/widgets/json/cfJsonEditorDirective.es6'
      );
      const { default: appWidgetsLinkEntityLinkDirectivesEs6 } = await import(
        'app/widgets/link/entityLinkDirectives.es6'
      );
      const { default: appWidgetsLocationCfLocationEditorDirectiveEs6 } = await import(
        'app/widgets/location/cfLocationEditorDirective.es6'
      );
      const { default: appWidgetsLocationSearchControllerEs6 } = await import(
        'app/widgets/location/searchController.es6'
      );
      const { default: appWidgetsNumberCfNumberEditorDirectiveEs6 } = await import(
        'app/widgets/number/cfNumberEditorDirective.es6'
      );
      const { default: appWidgetsRadioCfRadioEditorDirectiveEs6 } = await import(
        'app/widgets/radio/cfRadioEditorDirective.es6'
      );
      const { default: appWidgetsSharedCfEditorCharacterInfoDirectiveEs6 } = await import(
        'app/widgets/shared/cfEditorCharacterInfoDirective.es6'
      );
      const { default: appWidgetsSlugCfSlugEditorDirectiveEs6 } = await import(
        'app/widgets/slug/cfSlugEditorDirective.es6'
      );
      const { default: appWidgetsUrlCfUrlEditorDirectiveEs6 } = await import(
        'app/widgets/url/cfUrlEditorDirective.es6'
      );
      const { default: classesEntityListCacheEs6 } = await import('classes/entityListCache.es6');
      const { default: componentsCreateEntryButtonButtonDirectiveEs6 } = await import(
        'components/CreateEntryButton/buttonDirective.es6'
      );
      const { default: servicesActivationEmailResenderEs6 } = await import(
        'services/activationEmailResender.es6'
      );
      const { default: componentsClientActivationEmailResendControllerEs6 } = await import(
        'components/client/activationEmailResendController.es6'
      );
      const { default: componentsClientDialogsInitControllerEs6 } = await import(
        'components/client/dialogsInitController.es6'
      );
      const { default: componentsFieldDialogCfValidationDateSelectDirectiveEs6 } = await import(
        'components/field_dialog/cfValidationDateSelectDirective.es6'
      );
      const { default: componentsFieldDialogCfValidationSettingsDirectiveEs6 } = await import(
        'components/field_dialog/cfValidationSettingsDirective.es6'
      );
      const { default: componentsFieldDialogImageDimensionsValidationControllerEs6 } = await import(
        'components/field_dialog/imageDimensionsValidationController.es6'
      );
      const { default: componentsFieldDialogValidationAssetTypesControllerEs6 } = await import(
        'components/field_dialog/validationAssetTypesController.es6'
      );
      const { default: componentsFieldDialogValidationLinkTypeControllerEs6 } = await import(
        'components/field_dialog/validationLinkTypeController.es6'
      );
      const { default: componentsFormsDatetimeEditorCfDatetimeEditorDirectiveEs6 } = await import(
        'components/forms/datetime_editor/cfDatetimeEditorDirective.es6'
      );
      const { default: componentsFormsEmbedlyPreviewCfEmbedlyPreviewDirectiveEs6 } = await import(
        'components/forms/embedly_preview/cfEmbedlyPreviewDirective.es6'
      );
      const { default: componentsFormsFieldAlertCfFieldAlertDirectiveEs6 } = await import(
        'components/forms/field_alert/cfFieldAlertDirective.es6'
      );
      const { default: componentsRolesCfRolesForWalkMeEs6 } = await import(
        'components/roles/cfRolesForWalkMe.es6'
      );
      const { default: componentsSharedCfImgLoadEventEs6 } = await import(
        'components/shared/cfImgLoadEvent.es6'
      );
      const { default: componentsSharedCfSelectionDirectiveEs6 } = await import(
        'components/shared/cfSelectionDirective.es6'
      );
      const { default: componentsSharedCreateNewSpaceCreateNewSpaceDirectiveEs6 } = await import(
        'components/shared/create_new_space/createNewSpaceDirective.es6'
      );
      const { default: componentsSharedDataSizeScaleControllerEs6 } = await import(
        'components/shared/dataSizeScaleController.es6'
      );
      const { default: componentsSharedEndlessContainerDirectiveEs6 } = await import(
        'components/shared/endlessContainerDirective.es6'
      );
      const { default: componentsSharedListViewsControllerEs6 } = await import(
        'components/shared/listViewsController.es6'
      );
      const { default: componentsSharedSpaceWizardSpaceWizardDirectiveEs6 } = await import(
        'components/shared/space-wizard/SpaceWizardDirective.es6'
      );
      const {
        default: componentsSharedValidationErrorDisplayCfErrorListDirectiveEs6
      } = await import('components/shared/validation_error_display/cfErrorListDirective.es6');
      const {
        default: componentsSharedValidationErrorDisplayCfErrorMessagesDirectiveEs6
      } = await import('components/shared/validation_error_display/cfErrorMessagesDirective.es6');
      const {
        default: componentsSharedValidationErrorDisplayCfErrorPathDirectiveEs6
      } = await import('components/shared/validation_error_display/cfErrorPathDirective.es6');
      const {
        default: componentsSharedValidationErrorDisplayErrorPathControllerEs6
      } = await import('components/shared/validation_error_display/errorPathController.es6');
      const { default: componentsSharedViewStateControllerEs6 } = await import(
        'components/shared/viewStateController.es6'
      );
      const { default: componentsTabsAssetListAssetListActionsControllerEs6 } = await import(
        'components/tabs/asset_list/assetListActionsController.es6'
      );
      const { default: componentsTabsAssetListAssetListControllerEs6 } = await import(
        'components/tabs/asset_list/assetListController.es6'
      );
      const { default: componentsTabsAssetListAssetListDirectiveEs6 } = await import(
        'components/tabs/asset_list/assetListDirective.es6'
      );
      const { default: servicesPromisedLoaderEs6 } = await import('services/promisedLoader.es6');
      const { default: componentsTabsAssetListAssetSearchControllerEs6 } = await import(
        'components/tabs/asset_list/assetSearchController.es6'
      );
      const { default: componentsTabsEntryListDisplayFieldsControllerEs6 } = await import(
        'components/tabs/entry_list/displayFieldsController.es6'
      );
      const { default: componentsTabsEntryListEntryListActionsControllerEs6 } = await import(
        'components/tabs/entry_list/entryListActionsController.es6'
      );
      const { default: componentsTabsEntryListEntryListColumnsControllerEs6 } = await import(
        'components/tabs/entry_list/entryListColumnsController.es6'
      );
      const { default: componentsTabsEntryListEntryListControllerEs6 } = await import(
        'components/tabs/entry_list/entryListController.es6'
      );
      const { default: componentsTabsEntryListEntryListDirectiveEs6 } = await import(
        'components/tabs/entry_list/entryListDirective.es6'
      );
      const { default: utilsOverridingRequestQueueEs6 } = await import(
        'utils/overridingRequestQueue.es6'
      );
      const { default: componentsTabsEntryListEntryListSearchControllerEs6 } = await import(
        'components/tabs/entry_list/entryListSearchController.es6'
      );
      const { default: servicesBatchPerformerEs6 } = await import('services/batchPerformer.es6');
      const { default: componentsTabsListActionsControllerEs6 } = await import(
        'components/tabs/listActionsController.es6'
      );
      const { default: debugXhrCfMockXhrConsoleDirectiveEs6 } = await import(
        'debug/XHR/cfMockXhrConsoleDirective.es6'
      );
      const { default: directivesBindHtmlCompileDirectiveEs6 } = await import(
        'directives/bindHtmlCompileDirective.es6'
      );
      const { default: directivesCfFocusOnRenderDirectiveEs6 } = await import(
        'directives/cfFocusOnRenderDirective.es6'
      );
      const { default: directivesCfFocusOtInputDirectiveEs6 } = await import(
        'directives/cfFocusOtInputDirective.es6'
      );
      const { default: directivesCfSchemaDirectivesEs6 } = await import(
        'directives/cfSchemaDirectives.es6'
      );
      const { default: directivesCfThumbnailDirectiveEs6 } = await import(
        'directives/cfThumbnailDirective.es6'
      );
      const { default: directivesCfValidateDirectiveEs6 } = await import(
        'directives/cfValidateDirective.es6'
      );
      const { default: directivesCfWhenDisabledEs6 } = await import(
        'directives/cfWhenDisabled.es6'
      );
      const { default: directivesTooltipDirectiveEs6 } = await import(
        'directives/tooltipDirective.es6'
      );
      const { default: directivesWatchersTogglerDirectiveEs6 } = await import(
        'directives/watchersTogglerDirective.es6'
      );
      const { default: formsErrorsEs6 } = await import('forms/errors.es6');
      const { default: formsValidationEs6 } = await import('forms/validation.es6');
      const { default: formsEs6 } = await import('forms.es6');
      const { default: markdownEditorCfMarkdownActionDirectiveEs6 } = await import(
        'markdown_editor/cfMarkdownActionDirective.es6'
      );
      const { default: markdownEditorCfMarkdownEditorDirectiveEs6 } = await import(
        'markdown_editor/cfMarkdownEditorDirective.es6'
      );
      const { default: markdownEditorCfZenmodeDirectiveEs6 } = await import(
        'markdown_editor/cfZenmodeDirective.es6'
      );
      const { default: markdownEditorMarkdownPreviewDirectiveEs6 } = await import(
        'markdown_editor/markdownPreviewDirective.es6'
      );
      const { default: navigationBreadcrumbsBreadcrumbDirectiveEs6 } = await import(
        'navigation/Breadcrumbs/BreadcrumbDirective.es6'
      );
      const { default: navigationOrganizationNavDirectiveEs6 } = await import(
        'navigation/organizationNavDirective.es6'
      );
      const { default: navigationProfileNavDirectiveEs6 } = await import(
        'navigation/profileNavDirective.es6'
      );
      const { default: navigationSpaceNavBarDirectiveEs6 } = await import(
        'navigation/spaceNavBarDirective.es6'
      );
      const { default: searchEntitySelectorEntitySelectorControllerEs6 } = await import(
        'search/EntitySelector/entitySelectorController.es6'
      );
      const { default: searchEntitySelectorEntitySelectorDirectiveEs6 } = await import(
        'search/EntitySelector/entitySelectorDirective.es6'
      );
      const { default: servicesExceptionHandlerEs6 } = await import(
        'services/exceptionHandler.es6'
      );
      const { default: statesCfSrefDirectiveEs6 } = await import('states/cfSrefDirective.es6');
      const { default: uiFrameworkReactDirectiveEs6 } = await import(
        'ui/Framework/ReactDirective.es6'
      );
      const { default: uiCfIconDirectiveEs6 } = await import('ui/cfIconDirective.es6');
      const { default: uiCfUiStickyEs6 } = await import('ui/cfUiSticky.es6');
      const { default: uiCfUiTabEs6 } = await import('ui/cfUiTab.es6');
      const { default: uiHighlightMatchDirectiveEs6 } = await import(
        'ui/highlightMatchDirective.es6'
      );
      const { default: uiLoaderEs6 } = await import('ui/loader.es6');

      analyticsAnalyticsConsoleEs6();
      dataSharejsUtilsEs6();
      appEntityEditorStringFieldEs6();
      appEntityEditorPresenceHubEs6();
      accessControlUserListHandlerEs6();
      uiCommandEs6();
      accessControlRoleRemoverEs6();
      accessControlUsersUserListDirectiveEs6();
      accessControlRoleListDirectiveEs6();
      accessControlUserSpaceInvitationControllerEs6();
      accountCfNewOrganizationMembershipEs6();
      appContentModelEditorAddFieldDialogControllerEs6();
      appContentModelEditorApiNameControllerEs6();
      appContentModelEditorCfApiNameShadowDirectiveEs6();
      navigationCloseStateEs6();
      componentsFieldDialogFieldDialogEs6();
      appContentModelEditorContentTypeEditorControllerEs6();
      appApiApiKeyListApiKeyListDirectiveEs6();
      appEntityEditorEntityHelpersEs6();
      searchListQueryEs6();
      searchEntitySelectorEntitySelectorEs6();
      componentsAppContainerEntityCreatorEs6();
      appAssetEditorCfAssetEditorDirectiveEs6();
      appEntityEditorBulkEditorCfBulkEditorDirectiveEs6();
      appEntityEditorBulkEditorCfBulkEntityEditorDirectiveEs6();
      appEntityEditorCfEntityFieldDirectiveEs6();
      appEntityEditorCfTestEntryEditorDirectiveEs6();
      appEntityEditorCfWidgetRendererDirectiveEs6();
      appEntityEditorFieldLocaleControllerEs6();
      appEntityEditorStateControllerEs6();
      appEntryEditorCfEntryEditorDirectiveEs6();
      appEntryEditorCfWidgetApiDirectiveEs6();
      appEntryEditorEntryActionsControllerEs6();
      appEntryEditorFormWidgetsControllerEs6();
      appHomeCfTrackCopyEventEs6();
      appHomeContactUsContactUsSpaceHomeDirectiveEs6();
      appSnapshotsCfSnapshotPresenterEs6();
      appSnapshotsCfSnapshotSelectorEs6();
      appSnapshotsSnapshotComparatorEs6();
      appWidgetsCfBooleanEditorDirectiveEs6();
      appWidgetsCfCheckboxEditorDirectiveEs6();
      appWidgetsCfFileEditorDirectiveEs6();
      appWidgetsCfListInputEditorDirectiveEs6();
      appWidgetsCfRatingEditorDirectiveEs6();
      appWidgetsDatetimeCfEntryDatetimeEditorDirectiveEs6();
      appWidgetsJsonCfJsonEditorCodeEditorDirectiveEs6();
      appWidgetsJsonCfJsonEditorDirectiveEs6();
      appWidgetsLinkEntityLinkDirectivesEs6();
      appWidgetsLocationCfLocationEditorDirectiveEs6();
      appWidgetsLocationSearchControllerEs6();
      appWidgetsNumberCfNumberEditorDirectiveEs6();
      appWidgetsRadioCfRadioEditorDirectiveEs6();
      appWidgetsSharedCfEditorCharacterInfoDirectiveEs6();
      appWidgetsSlugCfSlugEditorDirectiveEs6();
      appWidgetsUrlCfUrlEditorDirectiveEs6();
      classesEntityListCacheEs6();
      componentsCreateEntryButtonButtonDirectiveEs6();
      servicesActivationEmailResenderEs6();
      componentsClientActivationEmailResendControllerEs6();
      componentsClientDialogsInitControllerEs6();
      componentsFieldDialogCfValidationDateSelectDirectiveEs6();
      componentsFieldDialogCfValidationSettingsDirectiveEs6();
      componentsFieldDialogImageDimensionsValidationControllerEs6();
      componentsFieldDialogValidationAssetTypesControllerEs6();
      componentsFieldDialogValidationLinkTypeControllerEs6();
      componentsFormsDatetimeEditorCfDatetimeEditorDirectiveEs6();
      componentsFormsEmbedlyPreviewCfEmbedlyPreviewDirectiveEs6();
      componentsFormsFieldAlertCfFieldAlertDirectiveEs6();
      componentsRolesCfRolesForWalkMeEs6();
      componentsSharedCfImgLoadEventEs6();
      componentsSharedCfSelectionDirectiveEs6();
      servicesContentfulClientEs6();
      componentsSharedCreateNewSpaceCreateNewSpaceDirectiveEs6();
      componentsSharedDataSizeScaleControllerEs6();
      componentsSharedEndlessContainerDirectiveEs6();
      componentsSharedListViewsControllerEs6();
      componentsSharedSpaceWizardSpaceWizardDirectiveEs6();
      componentsSharedValidationErrorDisplayCfErrorListDirectiveEs6();
      componentsSharedValidationErrorDisplayCfErrorMessagesDirectiveEs6();
      componentsSharedValidationErrorDisplayCfErrorPathDirectiveEs6();
      componentsSharedValidationErrorDisplayErrorPathControllerEs6();
      componentsSharedViewStateControllerEs6();
      componentsTabsAssetListAssetListActionsControllerEs6();
      componentsTabsAssetListAssetListControllerEs6();
      componentsTabsAssetListAssetListDirectiveEs6();
      servicesPromisedLoaderEs6();
      componentsTabsAssetListAssetSearchControllerEs6();
      componentsTabsEntryListDisplayFieldsControllerEs6();
      componentsTabsEntryListEntryListActionsControllerEs6();
      componentsTabsEntryListEntryListColumnsControllerEs6();
      componentsTabsEntryListEntryListControllerEs6();
      componentsTabsEntryListEntryListDirectiveEs6();
      utilsOverridingRequestQueueEs6();
      componentsTabsEntryListEntryListSearchControllerEs6();
      servicesBatchPerformerEs6();
      componentsTabsListActionsControllerEs6();
      debugXhrCfMockXhrConsoleDirectiveEs6();
      directivesBindHtmlCompileDirectiveEs6();
      directivesCfFocusOnRenderDirectiveEs6();
      directivesCfFocusOtInputDirectiveEs6();
      directivesCfSchemaDirectivesEs6();
      directivesCfThumbnailDirectiveEs6();
      directivesCfValidateDirectiveEs6();
      directivesCfWhenDisabledEs6();
      directivesTooltipDirectiveEs6();
      directivesWatchersTogglerDirectiveEs6();
      filtersEs6();
      formsErrorsEs6();
      formsValidationEs6();
      formsEs6();
      markdownEditorCfMarkdownActionDirectiveEs6();
      markdownEditorCfMarkdownEditorDirectiveEs6();
      markdownEditorCfZenmodeDirectiveEs6();
      markdownEditorMarkdownPreviewDirectiveEs6();
      navigationBreadcrumbsBreadcrumbDirectiveEs6();
      navigationOrganizationNavDirectiveEs6();
      navigationProfileNavDirectiveEs6();
      navigationSpaceNavBarDirectiveEs6();
      searchEntitySelectorEntitySelectorControllerEs6();
      searchEntitySelectorEntitySelectorDirectiveEs6();
      servicesExceptionHandlerEs6();
      statesCfSrefDirectiveEs6();
      uiFrameworkReactDirectiveEs6();
      uiCfIconDirectiveEs6();
      uiCfUiStickyEs6();
      uiCfUiTabEs6();
      uiHighlightMatchDirectiveEs6();
      uiLoaderEs6();

      angular.module('contentful/init').loaded = true;
    }
  ]).name;
