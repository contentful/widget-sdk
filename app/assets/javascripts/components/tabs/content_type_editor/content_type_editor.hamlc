.tab-header.editor-configuration
  %h1 {{contentType.getName()}}

  .editor-top-left
    .dropdown-btn
      %a.flat-button.dropdown-toggle
        %i.ss-dropdown.button-icon-right
        %span View optionsâ€¦
      .dropdown-menu
        %ul
          %li
            %label
              %input(type="checkbox" ng-model="preferences.showDisabledFields")
              Show disabled fields
  .editor-top-right
    %button.flat-button(type="button"
            ng-click="preferences.toggleAuxPanel()"
            ng-class="{active: preferences.showAuxPanel}"
            tooltip-placement="left"
            tooltip="Toggle additional details")
      Info

.aux-panel(ng-show="preferences.showAuxPanel")
  %header
    %span Content Type Information
  .entity-info-panel

.tab-main
  .form-horizontal(name="contentTypeForm")
    .form-field
      %label
        Name
        %sup *
      .form-controls(ot-path="['name']" ot-subdoc)
        .field-editor
          %input(type="text"
                 name="contentTypeName"
                 ng-disabled="!otEditable"
                 placeholder="Content Type Name (e.g. Product)"
                 ng-model="contentType.data.name"
                 ot-bind-text="")
        .cf-form-box-error(cf-error-path="['name']")
    .form-field
      %label Description
      .form-controls(ot-path="['description']" ot-subdoc)
        .field-editor
          %textarea(placeholder="Describe the purpose of Entries using this Content Type"
                    name="contentTypeDescription"
                    ng-disabled="!otEditable"
                    ng-model="contentType.data.description"
                    ot-bind-text="")
        .cf-form-box-error(cf-error-path="['description']")
    .form-field
      %label 
      .form-controls
    .form-field
      %label Fields
      .form-controls
        .content-type-field-list(ng-show="contentType.data.fields.length > 0")
        .advice(ng-hide="contentType.data.fields.length > 0")
          %i.ss-layout.giant-icon
          %header You have no Fields yet
          %p
            Add Fields to configure which form inputs are available for your editors to work with.            
          .dropdown-btn
            %button.dropdown-toggle.default-button.primary-button
              Create Field
            .dropdown-menu.type-menu(select-type="addField(type)")
        .dropdown-btn(ng-show="contentType.data.fields.length > 0")
          %button.dropdown-toggle.add-field-button.default-button.primary-button
            %i.ss-plus.button-icon
            Add Field
          .dropdown-menu.type-menu(select-type="addField(type)")
        .cf-form-box-error(cf-error-path="['fields']")
.tab-actions(ng-controller="ContentTypeActionsCtrl")
  .button-set
    %button.default-button.delete(type="button"
                   ng-show="canUnpublish()"
                   ng-click="unpublish()"
                   tooltip="Deactivate this Content Type")
      Deactivate
    %button.default-button.delete(type="button"
                   ng-show="canDelete()"
                   ng-click="delete()"
                   tooltip="Delete this Content Type")
      Delete
    %button.default-button.primary-button.publish(
                    ng-disabled="!canPublish()"
                    ng-click="publish()"
                    tooltip="Make this Content Type available to editors")
      {{publishButtonLabel()}}
  .save-status(tooltip="Every change you make is automatically saved as a draft. Hit {{publishButtonLabel()}} to create Entries of this Content Type."
               tooltip-placement="top")
