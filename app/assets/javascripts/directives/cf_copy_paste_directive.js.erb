'use strict';

angular.module('contentful').directive('cfCopyPaste', function(environment) {
  ZeroClipboard.config({
    moviePath: "<%= asset_path 'ZeroClipboard.swf' %>",
    forceHandCursor: true,
    allowScriptAccess: 'always',
    useNoCache: true,
    trustedOrigins: environment.settings.resourceUrlWhiteList
  });

  return {
    restrict: 'AC',
    link: function(scope, element, attrs) {
      var clip = new ZeroClipboard(element.get(0));
      var copyText = {
        'default': 'Copy',
        'copying': 'Copying...',
        'copied': 'Copied'
      };
      element.attr('copy-status', 'default');

      element.tooltip({
        title: function () {
          return copyText[$(this).attr('copy-status')];
        }
      });

      function mouseoverHandler(client, args) {
        $(this).attr('copy-status', 'default');
        $(this).tooltip('show');
        setTimeout(_.bind(function () {
          $(this).tooltip('hide');
        }, this), 2000);

      }
      clip.on('mouseover', mouseoverHandler);

      function mouseoutHandler(client, args) {
        $(this).tooltip('hide');
        $(this).attr('copy-status', 'default');
      }
      clip.on('mouseout', mouseoutHandler);

      function dataRequestedHandler(client, args) {
        $(this).tooltip('hide');
        $(this).attr('copy-status', 'copying');
        $(this).tooltip('show');
        var element = $(this);
        var clipboardTarget = element.parent().find('.'+element.attr('clipboard-target'));
        client.setText(clipboardTarget.val());
      }
      clip.on('dataRequested', dataRequestedHandler);

      function completeHandler(client, args) {
        $(this).tooltip('hide');
        $(this).attr('copy-status', 'copied');
        $(this).tooltip('show');
        setTimeout(_.bind(function () {
          $(this).tooltip('hide');
          $(this).attr('copy-status', 'default');
        }, this), 2000);
      }
      clip.on('complete', completeHandler);


      element.on('$destroy', function () {
        clip.off('mouseover', mouseoverHandler);
        clip.off('mouseout', mouseoutHandler);
        clip.off('dataRequested', dataRequestedHandler);
        clip.off('complete', completeHandler);
        element.tooltip('destroy');
      });
    }
  };
});
